"""add gpt models

Revision ID: 087353159fbe
Revises: 62eda1b75783
Create Date: 2024-10-09 10:09:40.640472

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '087353159fbe'
down_revision: Union[str, None] = '62eda1b75783'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_models',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('provider', sa.String(length=3), nullable=False),
    sa.Column('title_public', sa.String(length=28), nullable=False),
    sa.Column('title_model', sa.String(length=28), nullable=False),
    sa.Column('api_key', sa.String(length=100), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('incoming_price', sa.DECIMAL(precision=6, scale=2), nullable=False),
    sa.Column('outgoing_price', sa.DECIMAL(precision=6, scale=2), nullable=False),
    sa.Column('context_window', sa.Integer(), nullable=False),
    sa.Column('max_request_token', sa.Integer(), nullable=False),
    sa.Column('time_window', sa.Integer(), nullable=False),
    sa.Column('consumer', sa.String(length=3), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('district', sa.String(length=255), nullable=False),
    sa.Column('population', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cities_name'), 'cities', ['name'], unique=False)
    op.create_table('gpt_prompts',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sa.String(length=28), nullable=False),
    sa.Column('en_prompt_text', sa.Text(), nullable=False),
    sa.Column('ru_prompt_text', sa.Text(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('consumer', sa.String(length=3), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('approved_user_models',
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('tg_user_id', sa.BigInteger(), nullable=True),
    sa.Column('ai_model_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['ai_model_id'], ['ai_models.id'], ),
    sa.ForeignKeyConstraint(['tg_user_id'], ['tg_users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('ai_model_id')
    )
    op.create_table('user_ai_models',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('time_start', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('tg_user_id', sa.BigInteger(), nullable=True),
    sa.Column('model_id', sa.Uuid(), nullable=True),
    sa.Column('prompt_id', sa.Uuid(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['ai_models.id'], ),
    sa.ForeignKeyConstraint(['prompt_id'], ['gpt_prompts.id'], ),
    sa.ForeignKeyConstraint(['tg_user_id'], ['tg_users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tg_user_id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('ai_transactions',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('chat_id', sa.String(length=128), nullable=True),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('question_tokens', sa.Integer(), nullable=True),
    sa.Column('question_token_price', sa.DECIMAL(precision=6, scale=2), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('answer_tokens', sa.Integer(), nullable=True),
    sa.Column('answer_token_price', sa.DECIMAL(precision=6, scale=2), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('consumer', sa.String(length=3), nullable=False),
    sa.Column('user_ai_model_id', sa.Uuid(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_ai_model_id'], ['user_ai_models.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ai_transactions')
    op.drop_table('user_ai_models')
    op.drop_table('approved_user_models')
    op.drop_table('gpt_prompts')
    op.drop_index(op.f('ix_cities_name'), table_name='cities')
    op.drop_table('cities')
    op.drop_table('ai_models')
    # ### end Alembic commands ###
